{
	"pages.mainPage.name": "Fan Control",
	"Tap to set": "Tap to set",
	"pages.mainPage.sections.targets.name": "Target settings",
	"pages.mainPage.settings.fanEnabled.name": "Fan enabled?",
	"pages.mainPage.settings.fanEnabled.description": "Turn on/off to operate fan",
	"pages.mainPage.settings.tempTarget.name": "Target temperature (optional)",
	"pages.mainPage.settings.tempTarget.description": "Turn on fan if temperature is above this value",
	"pages.mainPage.settings.humidityTarget.name": "Humidity level (optional)",
	"pages.mainPage.settings.humidityTarget.description": "Maximum outside humidity level to turn on fan",
	"pages.mainPage.settings.checkInterval.name": "Check temperature interval (in seconds)",
	"pages.mainPage.sections.controls.name": "Fan switch and sensors",
	"pages.mainPage.settings.fanSwitch.name": "Fan switch",
	"pages.mainPage.settings.tempSensor.name": "Indoor temperature sensor",
	"pages.mainPage.settings.humiditySensor.name": "Indoor humidity sensor",
	"pages.mainPage.settings.weather.name": "Outdoor weather sensor (optional)",
	"pages.mainPage.settings.doorContacts.name": "Doors/windows to check (optional)",
	"pages.mainPage.sections.time.name": "Time of day to operate",
	"pages.mainPage.settings.startTime.name": "Start time (optional)",
	"pages.mainPage.settings.startTime.description": "Time when fan should start operating",
	"pages.mainPage.settings.endTime.name": "End time (optional)",
	"pages.mainPage.settings.startTime.description": "Time when fan should stop operating"
}


	// controls and temperature/humidity sensors
	page.section('controls', section => {
		section.deviceSetting('fanSwitch').capabilities(['switch'])
			.required(true).permissions('rx');
		section.deviceSetting('tempSensor').capabilities(['temperatureMeasurement'])
			.required(false).permissions('r');
		section.deviceSetting('humiditySensor').capabilities(['relativeHumidityMeasurement'])
			.required(false).permissions('r');
		// section.enumSetting('humidityAboveBelow').options(['Above','Below']);
	});

	// OPTIONAL: contact sensors
	page.section('contactSensors', section => {		     
		section.deviceSetting('doorContacts').capabilities(['contactSensor'])
			.required(false).multiple(true).permissions('r');
		section.enumSetting('contactsOpenClosed').options(['Open','Closed']);
	});

	// OPTIONAL: start and end time, outside weather, temp offset
	page.section('time', section => {
		section.timeSetting('startTime').required(false);
		section.timeSetting('endTime').required(false);
		section.deviceSetting('weather').capabilities(['temperatureMeasurement', 'relativeHumidityMeasurement'])
			.required(false).permissions('r');
		section.numberSetting('tempOffset').required(false);
		section.numberSetting('checkInterval').defaultValue(300).required(false);
	});
